---
title: Demos
meta_description: "Open source demos built with Ably "
meta_keywords: "chat, gaming, peer-to-peer, networking, javascript, typescript, vue, react, next, vercel, collaboration, engagement"
index: 15
section: root
---

h2(#depict-it). "Depict-it!":https://github.com/ably-labs/depict-it

A hilarious peer to peer drawing game built with vue.js using Ably channels.

This demo shows how to build a multiplayer game in the browser using peer to peer networking and uses the VueJS framework.

Live Demo: "depictit.ably.dev":https://depictit.ably.dev/

#vue #peer-to-peer #static-web-apps #pubsub #multiplayer-games #browser-games


h2(#multiplayer-space-invaders). "Multiplayer Space Invaders":https://github.com/ably-labs/realtime-multiplayer-space-invaders

A Realtime Multiplayer Space Invaders Game with Phaser 3 and Ably

This demo shows how to build a multiplayer game which runs in the browser with a central NodeJS server controlling the game state.

The game is built using PhaserJS.

Live Demo: "Space Invaders":https://space-invaders-multiplayer.herokuapp.com/

#phaser3 #javascript #multiplayer-games #browser-games


h2(#multiplayer-games-framework). "Multiplayer Games Framework":https://github.com/ably-labs/multiplayer-games-scalable-networking-framework

This repository contains a base networking framework for building any realtime multiplayer game on the web with Ably using the client/server architecture. This project uses vanilla JS on the client-side and NodeJS on the server-side and is scalable as you need.

LiveDemo: "Space Invaders":https://space-invaders-multiplayer.herokuapp.com/

#multiplayer-games #javascript #framework #node


h2(#chat-app-built-with-nextjs-and-vercel). "Chat App built with NextJS and Vercel":https://github.com/ably-labs/NextJS-chat-app

A chat app built using Ably and Next JS and hosted with Vercel.

This demo shows how to build a basic chat app with Ably which runs in the browser.

Vercel allows users to deploy Serverless Functions, which are essentially just blocks of code which provide a response to an HTTP request. However, these functions have a maximum execution timeout, which means that it is not possible to maintain a WebSocket connection this way. This is where Ably comes in. The client can connect to an Ably Channel and send and receive messages on it to add Realtime functionality to an app by managing the WebSocket connections for you.

Live Demo: "Realtime Chat App with Ably, NextJS and Vercel":https://next-js-chat-app.vercel.app/

#vercel #next #serverless #websockets


h2(#agile-flush-vue-app). "Agile Flush Vue App":https://github.com/ably-labs/agile-flush-vue-app

The No. 1 and No. 2 place for online planning poker! Use this app to collaboratively estimate the stories for the next sprint. Built with VueJS and NodeJS this is a great example of building a simple realtime collaboration tool in the browser with pubsub messaging.

Live Demo: "Agile Flush":https://agileflush.ably.dev/

#nodejs #vuejs #vue #serverless #azure #azure-functions #ably #static-web-apps #realtime-collaboration


h2(#fully-featured-scalable-chat-app). "fully-featured-scalable-chat-app":https://github.com/ably-labs/fully-featured-scalable-chat-app

An example of how to architect a fully featured, scalable chat app. With user authentication, channel management and message history. Along with many other great features.

Live Demo: "FFS Chat":https://gentle-dune-0fec87f03.azurestaticapps.net/

#chat #typescript #javascript #azure #serverless #moderation #channels


h2(#realtime-quiz-framework). "Realtime Quiz Framework":https://github.com/ably-labs/realtime-quiz-framework

This repository contains a base networking framework for building a realtime quiz platform with Ably. This project uses VueJS on the client-side and NodeJS on the server-side and is scalable as you need. It is a great example of how to build a multiplayer quiz in your browser, but also could be used in EdTech to build an end of term test.

Live Demo: "quiz.ably.dev":https://quiz.ably.dev/

#pubsub #quiz #javascript #vuejs #realtime #framework #trivia


h2(#video-watch-party-with-jamstack). "Video watch party with Jamstack":https://github.com/ably-labs/jamstack-sync-stream-video

A live watch party app to watch videos with your friends remotely, built with Jamstack architecture.

Live Demo: " jamstack-watch-party.ably.dev/":https://jamstack-watch-party.ably.dev/

#jamstack #javascript #realtime #netlify #strapi #video-streaming #shared-experience #audience-engagement


h2(#collaborative-whiteboard). "Collaborative whiteboard":https://github.com/ably-labs/whiteboard

A collaborative, interactive whiteboard for multiple users, built with vanilla JS and pubsub messaging.

Live Demo: "whiteboard.ably.dev/":https://whiteboard.ably.dev/

#javascript #whiteboard #collaboration #canvas #webapi


h2(#live-captioning-with-ably-and-microsoft-azure-cognitive-services). "Live Captioning with Ably and Microsoft Azure Cognitive Services":https://github.com/ably-labs/live-caption-demo

This is a web app that uses Azure Cognitive Service (ACS) and Ably. It is designed to be run in a browser on your mobile phone while you're wearing mask with a flexible LED display. It uses ACS to perform streaming transcription of your microphone input. The data returned from ACS is then sent to the display on the mask via Ably's MQTT broker. The transcription is also displayed in the browser.

#livecaption #wearable #iot #mqtt #azure-cognitive-services #speech-to-text


h2(#music-responsive-wearable-led-display). "Music responsive wearable LED display":https://github.com/ably-labs/LED-Matrix-Jumper

A Node.js server &#43; microphone collecting HTML page that detects songs, and returns various festive themed iconography.

Live Demo: "What's that song?":https://iot-christmas-jumper.herokuapp.com/

#iot #mqtt #node #music-recognition


h2(#sharable-decoratable-christmas-tree). "Sharable, decoratable Christmas Tree":https://github.com/ably-labs/decorate-a-tree-2020

A sharable, decoratable Christmas Tree that uses real time pub/sub data. It uses the browser's native drag and drop support and realtime messages. Tree state is persisted with Azure Blob Storage.

Live Demo: "decorate-it.ably.dev/":https://decorate-it.ably.dev/

#javascript #azure-blob-storage #azure-static-web-apps #webapis


h2(#realtime-midi-player). "Realtime midi player":https://github.com/ably-labs/realtime-midi-player

A realtime midi keyboard in the browser. Uses WebAPIs and pubsub to create a virtual jam session

Live Demo: "Ably Midi Player":https://realtime-midi-player.herokuapp.com/

#javascript #collaboration #webapis #midi-player


h2(#rock-paper-scissors). "Rock Paper Scissors":https://github.com/ably-labs/ably-rock-paper-scissors

This project contains a multiplayer game in which players battle as ever-changing hand shapes of rock, paper, and scissors.

Live Demo: "Rock, paper, scissors!":https://rock-paper-scissors-ably.herokuapp.com/

#multiplayer #gaming #gamedev #javascript #engagement

h2(#airtable-message-storage). "Airtable Message Storage":https://github.com/ably-labs/ably-airtable-starter-kit

A fully functional starter kit to store realtime messages from Ably into Airtable via WebHooks.

Live Demo: "realtime-chat-storage.ably.dev/":https://realtime-chat-storage.ably.dev/

#javascript #airtable #node #vue
