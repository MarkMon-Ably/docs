Before you can configure your devices to receive Push Notifications, you must first enable push in your Ably app by adding the APNS push service credentials and/or certificates to your app push dashboard. These credentials are then used by Ably to authenticate with APNS and deliver the notifications intended for a device. In this step we'll setup the Ably dashboard with the correct certificates.

Navigate to your Ably dashboard. After selecting the correct application, click on the "Settings" tab. Now you can either import the ".p12" certificate, or create a PEM file and copy this into your dashboard.

h3. a. Importing the .p12 file

Navigate to the "Notifications" tab on your app dashboard, then scroll down to the "Setting up Apple Push Notification Service" section.

Select the ".p12" file you had exported in the previous steps and enter the password that you had assigned earlier. This is shown below.

<a href="/images/tutorials/push-ios/apple-push-p12.png" target="_blank">
	 <img src="/images/tutorials/push-ios/apple-push-p12.png" style="width: 100%" alt="Apple Push P12">
</a>


Click on "Save APNs settings" and you should get a confirmation of the certificate being imported successfully. You can additionally confirm that the file has been imported correctly by refreshing the page and seeing if the PEM cert and private key text boxes are now populated with the imported key details.

h3. b. Creating a PEM file from the .p12 file

You can use "openSSL":https://www.openssl.org/, you can convert the recently imported ".p12" file to a PEM file with the following command:

```[sh]
openssl pkcs12 -in ./YOUR_CERT_NAME.p12 -out ./YOUR_CERT_NAME.pem -nodes -clcerts
```

Now, open the PEM file in your text editor and copy everything between @-----BEGIN CERTIFICATE-----@ and @-----END CERTIFICATE-----@ (inclusive), into the "PEM cert" text box.

Next, copy everything between @-----BEGIN PRIVATE KEY-----@ and @-----END PRIVATE KEY-----@ (inclusive), into the "PEM private key" text box.

Your configure page should now look as shown below:

<a href="/images/tutorials/push-ios/apple-push-pem.png" target="_blank">
	 <img src="/images/tutorials/push-ios/apple-push-pem.png" style="width: 100%" alt="Apple Push PEM">
</a>

Click on the "Save APNS settings" button to save your changes.

h3. c. Enabling Push

By default the "Push Notifications" feature is disabled. So you will have to enable it explicitly.

Under "Channel rules" on your Ably app dashboard, add a new channel namespace (or edit an existing one) and check the "Persisted" and "Push Notifications enabled" checkboxes and save it. Keep in mind that this will be the same namespace you'll later use in your iOS application. You can learn more about "channel namespaces":https://support.ably.io/support/solutions/articles/3000030058-what-is-a-channel-namespace-and-how-can-i-use-them- from one of our support articles. We'll use @push@ as our channel namespace for this tutorial.

Channel namespaces allow you to logically group the different channels that are part of your application. You can further have various channels within a single namespace by separating the channel name from it's namespace by a colon. For instance, a channel name in our Push Notifications app can be "push:my_channel_name".

 <a href="/images/tutorials/push-ios/ios-push-enabled.png" target="_blank">
  <img src="/images/tutorials/push-ios/ios-push-enabled.png" style="width: 100%" alt="iOS Push Enabled">
 </a>
