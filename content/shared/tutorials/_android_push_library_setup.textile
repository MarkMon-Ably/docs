To build your own Android Project, please visit "Android Developers":https://developer.android.com/training/basics/firstapp/creating-project.html website and get familiar with steps necessary to set up your own application.
  
To start using Ably in your Android app, you need to include the Ably Client library. We recommend that you include the latest client library via Gradle in your module-level @gradle.build@ file.

```[groovy]
apply plugin: 'com.android.application'
...
dependencies {
    ...
    compile 'io.ably:ably-android:1.1.0'
}
```


In the above example a specific version of the library is referenced, you can always "check which is the latest stable version":https://bintray.com/ably-io/ably/ably-android and always use that.

After you add necessary dependencies, you can import AblyRealtime class into your code and initialize it as shown below:

```[java]
import io.ably.lib.realtime.AblyRealtime;

public class ExampleActivity extends AppCompatActivity {
private final static String API_KEY = "INSERT-YOUR-API-KEY-HERE";

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_example);
    try {
        initAbly();
    } catch (AblyException e) {
        e.printStackTrace();
    }
}

private void initAbly() throws AblyException {
    AblyRealtime realtime = new AblyRealtime(API_KEY);
}
}
```

Alternatively, you can add your API key in the @local.properties@ file in order to prevent the secret keys from being accidentally committed to the version control system that you use. Further, assign the @ably.env@ variable to either 'sandbox' or 'production' accordingly.

<a href="/images/tutorials/android-push/android-code-2.png" target="_blank">
    <img src="/images/tutorials/android-push/android-code-2.png" style="width: 100%" alt="Setting local properties in the android app">
</a>