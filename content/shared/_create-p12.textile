h3. Create an App ID

Before you can configure your devices to receive push notifications, you must first enable push in your app by either editing your current app id or creating a new one. This step will show you how to create a new app id (in your apple developer portal) with the correct certificates and services enabled.  

Login to your <a href="https://developer.apple.com">Apple developer account</a> and click on "Certificates, Identifiers and Profiles"

Select App IDs from side menu and create a new App ID.

Note: If you have already created an App ID for your app you can skip this step. Instead you just need to edit your current app ID and just enabled Push Notifications.

<a href="/images/tutorials/apple-add-app-id.png" target="_blank">
  <img src="/images/tutorials/apple-add-app-id.png" style="width: 100%" alt="Apple Add App ID">
</a>

Specify the App name, Bundle ID (yours will have to be different) but it should look something like this:

<a href="/images/tutorials/apple-app-id-description.png" target="_blank">
  <img src="/images/tutorials/apple-app-id-description.png" style="width: 100%" alt="Apple Add App ID & Description">
</a>

Select Push Notifications from the app services list and then Continue.

<a href="/images/tutorials/apple-app-id-services.png" target="_blank">
  <img src="/images/tutorials/apple-app-id-services.png" style="width: 100%" alt="Apple Add App ID & Description">
</a>

Click Register, then Done to complete app registration.

h3. Generate a Certificate from Keychain access

Launch the Keychain Access application in your Mac OS X and select:
   Keychain Access -> Certificate Assistant -> Request a Certificate From a Certificate Authority

* Enter your email address and check the 'Saved to disk' option. Click continue and select a location to save the certificate to.

<a href="/images/tutorials/mac-create-signing-cert.png" target="_blank">
  <img src="/images/tutorials/mac-create-signing-cert.png" style="width: 100%" alt="Mac request signing certificate">
</a>

h3. Generate a development certificate

* Return to your apple developer account.
* Select your newly created app ID from the app ID's and click edit.
* Scroll down to the push notifications a click Create Certificate.

<a href="/images/tutorials/create-ios-push-development-cert.png" target="_blank">
  <img src="/images/tutorials/create-ios-push-development-cert.png" style="width: 100%" alt="Click create ios push development cert">
</a>

On the next screen click continue as you have already completed that step.

* Now you need to upload the signing certificate that we saved to our disk earlier and click continue.

<a href="/images/tutorials/ios-push-upload-signing-cert.png" target="_blank">
  <img src="/images/tutorials/ios-push-upload-signing-cert.png" style="width: 100%" alt="Upload signing certificate">
</a>

* This will create a new push certificate valid for one year that you can download. Go ahead and download it.

<a href="/images/tutorials/download-ios-push-cert.png" target="_blank">
  <img src="/images/tutorials/download-ios-push-cert.png" style="width: 100%" alt="Download ios push cert">
</a>

h3. Generate APNS P12

Double click on your newly downloaded certificate to add to keychain access. Open keychain access and right click on the certificate with the bundle ID we defined earlier.
Select the export option.

<a href="/images/tutorials/keychain-export-development-cert.png" target="_blank">
  <img src="/images/tutorials/keychain-export-development-cert.png" style="width: 100%" alt="Export development cert from keychain">
</a>

Give your new certificate a name and make sure that the ".p12" option is selected and click save. On the next screen enter a password. You may also be asked to supply your computer password.

<a href="/images/tutorials/keychain-export-development-p12-password.png" target="_blank">
  <img src="/images/tutorials/keychain-export-development-p12-password.png" style="width: 100%" alt="P12 Password Export">
</a>
