---
title: Realtime Client Library API
section: realtime
index: 0
---

The Ably Realtime client library establish and maintain a persistent connection to Ably enabling extremely low latency broadcasting and receiving of messages and presence state. All official client library APIs are consistent across every language offering "pub/sub functionality":/realtime/channels-messages, "presence on channels":/realtime/presence, "basic and token authentication":/realtime/authentication, "automatic connection management during changing network conditions":https://support.ably.io/solution/articles/3000044636-routing-around-network-and-dns-issues, optional "symmetric encryption":/realtime/encryption and access to "channel, presence and metrics history":/realtime/history.

The Ably Realtime client library is available in "most popular languages and platforms":https://www.ably.io/download including "Javascript":https://github.com/ably/ably-js, "iOS":https://github.com/ably/ably-ios, "Android":https://github.com/ably/ably-java, "Java":https://github.com/ably/ably-java, ".NET":https://github.com/ably/ably-dotnet, "Node.js":https://github.com/ably/ably-js, "Ruby":https://github.com/ably/ably-ruby, "Go":https://github.com/ably/ably-go and "more...":https://www.ably.io/download

"Download one of our Realtime client libraries now »":https://www.ably.io/download

h2. When to use Realtime vs REST libraries

The **Realtime library** is most commonly used client-side and is stateful, it establishes a connection to Ably for that client and maintains state for the life of the connection. Reasons to use the Realtime library are:

* You are developing a mobile, desktop or web client that needs to subscribe to messages in real time.
* You want to maintain a persistent connection to Ably, attach to one or more channels, and publish and subscribe to messages.
* Your application needs to register its presence on a channel, or listen for others becoming present in real time.

The **REST client library** is most commonly used server-side i.e. on your application servers, and is stateless. Reasons to use the REST library are:

* Your application server is used to primarily issues tokens for clients and/or publish messages on channels.
* Your application is mostly stateless i.e. you process a request or respond to an event, and then move onto the next request or event without any previous state carrying through.
* Your prefer a synchronous request over an asynchronous request.  Note not all REST libraries are synchronous, but where the platform offers a synchronous and asynchronous approach, the REST libraries are more often synchronous.

h4. Other library and protocols to consider

* If you want to consume realtime data from one or more of your servers, then we recommend you consider using our "Reactor Queues":/general/queues or "Reactor Firehose":/general/firehose to ensure you can consume realtime data in a robust, resilient and scalable way. Find our more about "the Ably Reactor":/reactor.
* If you want realtime messages or presence events to execute code on your servers or in a server-less environment (such as AWS Lambda), then you should consider "Reactor WebHooks":/general/webhooks and "Reactor Functions":/general/webhooks.
* If you want to use an alternative client library for a protocol such as MQTT or perhaps one of our competitors' protocols, you should review "the realtime protocols we support with our Protocol Adapters":http://www.ably.io/adapters

h2. Diving into the documentation

The Realtime Client Library documentation API is broken down as follows:

* "Constructor & usage examples":usage
* "Connection":connection
* "Channels & Messages":channels-messages
* "Presence":presence
* "Authentication":authentication
* "History":history
* "Encryption":encryption
* "Statistics":statistics
* "Types":types

h2. Step-by-step tutorials

We have a number of tutorials in a wide range of languages to help walk you through some of the key features of our Ably client libraries.
"View the Ably tutorials »":/tutorials

