---
title: Inband channel occupancy events
meta_description: "Inband occupancy events are occupancy events for a channel published to the channel itself."
meta_keywords: "Ably, inband, occupancy, occupancy events, channel metadata."
section: realtime
index: 5
jump_to:
  Help with:
    - Overview#overview
    - Occupancy channel parameter#occupancy-channel-parameter
    - Occupancy events#occupancy-events
    - See also#see-also
---

h2(#overview). Overview

The inband channel occupancy feature allows a client to subscribe to occupancy metadata events relating to a single channel, and for those events to be delivered to the client as messages on the channel itself. Occupancy metadata events received as messages on the channel are known as __inband events__.

The @Occupancy@ type is defined in the "Channel Metadata documentation":/realtime/channel-metadata#occupancy.

h2(#occupancy-channel-parameter). Occupancy channel parameter

Inband channel occupancy events are enabled in a channel attachment by specifying the @occupancy@ parameter. This is described in more detail in the "Channel Parameters documentation":/realtime/channel-params. The value of the parameter specifies the occupancy fields of interest, and the supported parameter values are:

* @metrics@: this enables events containing the full @Occupancy@ details in their @data@ payload. Events are sent when the count for any of the included categories changes, up to a maximum rate of one message per second.
* @metrics.<category>@:  this enables events whose @data@ payload contains an @Occupancy@ value containing the occupancy, that is the client count, for only the given category. Events are sent when the count for the given category changes, up to a maximum rate of one message per second.

Channel parameters are a general mechanism for specifying attributes of a channel attachment. See the "Channel parameters documentation":/realtime/channel-params for further details.

The following example shows how to specify the occupancy channel parameter:

```[javascript]
var channelOpts = { params: { occupancy: 'metrics' } };
var channel = ably.channels.get('{{RANDOM_CHANNEL_NAME}}', channelOpts);
```

In this case all occupancy metrics are contained in occupancy messages.

The following example shows how to specify a category:

```[javascript]
var channelOpts = { params: { occupancy: 'metrics.subscribers' } };
var channel = ably.channels.get('{{RANDOM_CHANNEL_NAME}}', channelOpts);
```

In this case only occupancy metrics for @subscribers@ are contained in occupancy messages.

h2(#occupancy-events). Occupancy events 

Events in a channel that contain metadata have an event name qualified with the @[meta]prefix@. For example, occupancy messages have an event name of @[meta]occupancy@. Messages published by clients do not contain this metadata. The following code snippet illustrates this:

```[javascript]
var channelOpts = { params: { occupancy: 'metrics' } };
var channel = ably.channels.get('{{RANDOM_CHANNEL_NAME}}', channelOpts);

channel.subscribe('[meta]occupancy', (message) => {
  console.log('inband: ', message.data);
});
```

In this example only occupancy messages will be logged to the console, not user-specified messages.

An example inband channel occupancy message is shown here:

```[json]
{
  name: '[meta]occupancy',
  id: 'V12G5ABc_M:0:0',
  timestamp: 1612286351217,
  clientId: undefined,
  connectionId: undefined,
  connectionKey: undefined,
  data: {
    metrics: {
      connections: 1,
      publishers: 1,
      subscribers: 1,
      presenceConnections: 1,
      presenceMembers: 0,
      presenceSubscribers: 1
    }
  },
  encoding: null,
  extras: undefined,
  size: undefined
}
```

Occupancy events have a payload in their @data@ attribute which is an @Occupancy@ value. An example of the occupancy event data is shown here:

```[json]
{
  metrics: {
    connections: 4,
    publishers: 4,
    subscribers: 4,
    presenceConnections: 4,
    presenceMembers: 2,
    presenceSubscribers: 4
  }
}
```

If subscribing to only a single category, then only that member is present, as shown in the following example for the @subscribers@ category: 

```[javascript]
{
  name: '[meta]occupancy',
  data: {
    metrics: {
      subscribers: 2
    }
  }
}
```

h2(#see-also). See also

Please refer to the following resources for more information:

* "Inband channel occupancy tutorial":/tutorials/channel-occupancy-events
* "Channel metadata":/realtime/channel-metadata
* "Metachannels":/realtime/metachannels
* "Channel parameters documentation":https://www.ably.io/documentation/realtime/channel-params
