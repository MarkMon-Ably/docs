---
title: Channel Metadata
meta_description: "Channel metadata is data about Ably channels, including channel and connection lifecycle events."
meta_keywords: "Ably, metadata, channel metadata, lifecycle events, connection lifecycle, channel lifecycle."
section: realtime
index: 3
jump_to:
  Help with:
    - Overview#overview
    - Use cases#use-cases
    - Tutorials#tutorials
  Channel API Types:
    - ChannelDetails#channel-details
    - ChannelStatus#channel-status
    - Occupancy#occupancy
---

h2(#overview). Overview

Channel Metadata provides information about channels, such as the current state changes of a channel, or the changes in its occupancy. There are several ways to obtain channel metadata:

1. "Metachannels":/realtime/metachannels - Metachannels are special channels that provide metadata about all channels associated with an Ably application, this includes metadata associated with channel and connection lifecycle.
2. "Inband channel occupancy events":/realtime/inband-occupancy - Inband occupancy events are occupancy events that are present on a user-created channel. 
3. "Channel Status API":/rest/channel-status - The Channel Status API is a REST API that allows users to query a channel to retrieve channel metadata. It also allows you to "enumerate":/rest/channel-status#enumeration-rest all the active channels in a particular app. The details of the Channel Status API are covered in the "Channel Status documentation":/rest/channel-status. It is not recommended you poll for status updates as this is inefficient.

h2(#use-cases). Use cases

Having access to channel metadata can provide numerous benefits. In a scenario where the number of subscribers to a channel exceeds 100, usage of other options such as "presence":/core-features/presence becomes less effective, as there is n-squared loading if all of the clients subscribe to presence. You can alternatively use "metachannels":/realtime/metachannels to check the number of active subscribers.

You may want to publish your data only if there is a subscriber for that data. The "channel lifecycle events":#lifecycle-events on metachannels can notify you when a channel is opened, becomes active, or is no longer active, indicating to publisher clients when the last subscriber leaves the channel.

If you need to be able to query channel metadata, you can also make use of the "Channel Status API":/rest/channel-status#metadata-rest to inspect the state of individual channels, or "enumerate":/rest/channel-status#enumeration-rest all active channels in an app. **This approach should only be used for one-off queries, rather than continuous polling, as under heavy use on busy channels, the polled data may be out of date by the time it arrives.**

h2(#tutorials). Tutorials

The tutorials provide step-by-step examples of how to obtain and use channel metadata:

* "Channel Lifecycle Events":/tutorials/channel-lifecycle-events 
* "Channel Enumeration":/tutorials/channel-enumeration-rest
* "Inband occupancy events":/tutorials/channel-occupancy-events 

h1. Channel Metadata API Reference

inline-toc.
  Types:
    - ChannelDetails#channel-details
    - ChannelStatus#channel-status
    - Occupancy#occupancy

h2(#types). Types

The payload of metadata events for channels is the "@ChannelDetails@":#channel-details type which contains the @channelId@ and other static information about the channel, plus a @status@ containing a "@ChannelStatus@":#channel-status instance which contains information about the current state of the channel.

<%= partial partial_version('types/_channel_details') %>
