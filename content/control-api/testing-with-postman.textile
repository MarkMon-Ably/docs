---
title: Testing with Postman
meta_description: "The Control API is a REST API that enables you to manage your Ably account programmatically. This is the Control API Reference guide."
meta_keywords: "Ably, Control API, account management, control, REST API, OpenAPI Specification, OAS3."
section: control-api
index: 30
jump_to:
  Help with:
    - Importing into Postman#importing
    - Sending a request#send-request
    - See also#see-also
---

There are several ways you can try out the Control API. You can use a command line tool such as "Curl":https://curl.se/ or "HTTPie":https://httpie.io/ to test out various requests. Another way is to use a graphical tool such as Postman or Paw. This topic looks at testing with Postman.

h2(#importing). Importing the specification into Postman

A convenient way to try out the REST APIs is by importing the OAS3 specification into "Postman":https://www.postman.com/. To do this, carry out the following steps: 

1. Make sure you have "Postman":https://www.postman.com/downloads/ installed.

2. Start Postman and select File > Import from the main menu. The import dialog is displayed:

<a href="/images/screenshots/control-api/postman-import.png" target="_blank">
  <img src="/images/screenshots/control-api/postman-import.png" style="width: 100%" alt="Postman import dialog">
</a>

3. Drag and drop the OAS3 specification you want to test, or use the "Upload file" button to select and import a specification. Alternatively, if you haven't already downloaded the specification, you can provide a link to it in the Ably Open Specs "GitHub repository":https://github.com/ably/open-specs/definitions/control-v1.yaml.

4. In the Import dialog use the default settings and click "Import".

5. The imported specification will now appear in your Postman collections:

<a href="/images/screenshots/control-api/imported-collection.png" target="_blank">
  <img src="/images/screenshots/control-api/imported-collection.png" style="width: 100%" alt="Postman imported collection">
</a>

You are now ready to test out the API.

h2(#send-request). Sending a request

You have now imported the specification into Postman. You now need to "configure a token":#authentication to authenticate any requests you make to the Control API.

For many Control API requests you will also need to specify your Account ID or Application ID. You can see the "documentation":/control-api#ids for details on how to obtain these.

Now that you understand where to obtain these items, you will learn how to create and execute a request in postman. 

1. The following screenshot shows the required parameters for the "List account apps" request:

<a href="/images/screenshots/control-api/app-list-request.png" target="_blank">
  <img src="/images/screenshots/control-api/app-list-request.png" style="width: 100%" alt="App list request">
</a>

This is an account-level operation and therefore requires your Account ID in the `account_id` request parameter.

2. You also need to configure your token as a `Bearer Token` in the Authorization tab:

<a href="/images/screenshots/control-api/bearer-token.png" target="_blank">
  <img src="/images/screenshots/control-api/bearer-token.png" style="width: 100%" alt="Bearer token">
</a>

Without the token set, your request will fail to authenticate.

3. Now that everything is configured, you can send the request:

<a href="/images/screenshots/control-api/send-request.png" target="_blank">
  <img src="/images/screenshots/control-api/send-request.png" style="width: 100%" alt="Send request">
</a>

4. You receive back a response from the server:

<a href="/images/screenshots/control-api/response.png" target="_blank">
  <img src="/images/screenshots/control-api/response.png" style="width: 100%" alt="Response">
</a>

You are now ready to try out other requests.

You can also use the command-line tool "Curl":https://curl.se/ to test out the Control API. Some examples are given in the following sections.

h2(#see-also). See also

* "Control API Reference":/control-api/api-reference
* "Overview":/control-api
* "Curl examples":/control-api/curl-examples
