---
title: Control API (Combined)
meta_description: "Control API provides a REST API to allow you to manage your Ably account."
meta_keywords: "Ably, account management, control, REST API."
section: control-api
index: 40
api_separator:
jump_to:
    Help with:
    - Overview#overview
    - Authentication#authentication
    - Account and application IDs#ids
    - See also#see-also
    Applications API:
    - list-apps
    - create
    - update
    - delete
    Keys API:
    - list-keys
---

Demonstrates combined content (topics + API reference all on one page)

h2(#overview). Overview

The Control API is a REST API that allows you to manage your Ably account remotely.

Using this API you can manage:

* Your applications
* Keys for an application
* Namespaces
* Queues
* Rules

Repetitive operations such as creating or updating apps, enumerating queues, and other tasks can be automated using the Control API.

"Jump to API Reference":#api

h2(#authentication). Authentication

In the Ably dashboard, on the top menu bar, navigate to "Free account" (other account name as appropriate) and select "My Access Tokens" from the menu.  

You are presented with the "My Access Tokens" area, where you can create tokens for use with the Control API. 

h3(#create-access-token). Create an access token

To create a new token use the following procedure:

1. Click the "Create new access token" button. 
2. Enter a friendly name for your token, so you'll remember what it's used for.
3. Select the capabilities you wish the token to have, depending on your use case.
4. Click the "Create" button to create the token.

h3(#using-access-token). Using the access token

From the "My access tokens" area you can click the "Copy Token" button, to copy the button to the clipboard.

You use the access token to validate your API requests. This is done by using the access token as a bearer token in the @Authorization@ of the HTTP request. For example, using Curl:

```[sh]
curl -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' ...
```

h2(#ids). Account and application IDs

Note that some requests require your Account ID, and some require your App ID.

h3(#account-id). How to find your Account ID

In the Ably dashboard, on the top menu bar, navigate to "Free account" (other account name as appropriate) and select "Account settings". Your Account is displayed.

h3(#app-id). How to find your Application ID

In the Ably dashboard click on the app you want to find the application ID for. Click on the "Settings" tab. The App ID is displayed under "Application settings".

h2(#see-also). See also

* "Download the OAS3 specification from GitHub":https://raw.githubusercontent.com/ably/open-specs/0a5b79338c0ae77c5747ca7bd9a452a6a2394838/definitions/control.yaml
* "Control API Reference - Swagger":https://www.ably.io/api-docs/index.html
* "Redocly example - Hosted at redocly":https://ably-control-api.redoc.ly/ 
* "Redoc version from spec in our GitHub repo - clone and run the spec repo":http://localhost:8080

h1(#api). API routes

h2(#applications). Application routes

Routes providing functionality to list, create, delete and update applications within an account.

h3(#list-apps). List the applications in an account

h6. GET https://control.ably.net/v1/accounts/@accountId@/apps

Lists the applications for the specified @accountId@.

h5. Parameters

- account_id := required, string, path

h5. Example request

bc[sh]. curl "https://control.ably.net/v1/accounts/<YOUR_ACCOUNT_ID>/apps" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json'

h5. Example response

```[json]
[
  {
    "id": "28AB6w",
    "name": "Default",
    "status": "enabled",
    "tlsOnly": true,
    "enablePusherCompatibility": false,
    "fcmKey": null,
    "apnsCertificate": null,
    "apnsUseSandboxEndpoint": false
  },
  {
    "id": "dcABrA",
    "name": "TestApp",
    "status": "deleted",
    "tlsOnly": true,
    "enablePusherCompatibility": false,
    "fcmKey": null,
    "apnsCertificate": null,
    "apnsUseSandboxEndpoint": false
  }
]
```

h3(#create). Create an application

h6. POST https://control.ably.net/v1/accounts/@accountId@/apps

Creates an application.

h5. Parameters

- account_id := required string path

The request body contains the details of the application to be created and is an object of type @application/json@:

- name := required, string, application name
- status := optional, enum [enabled, disabled], the status of the created application
- tlsOnly := optional, boolean, nullable, application should only be accessible using TLS
- enablePusherCompatibility	:= boolean, nullable, 
- fcmKey := string, nullable, 
- setupPusherNamespaces := boolean
- apnsCertificate := string, nullable
- apnsPrivateKey := string, nullable
- apnsUseSandboxEndpoint := boolean, nullable

h5. Example request

```[sh]
curl -X "POST" "https://control.ably.net/v1/accounts/<YOUR_ACCOUNT_ID>/apps" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "status": "enabled",
  "tlsOnly": true,
  "enablePusherCompatibility": false,
  "name": "control-api-test-1",
  "setupPusherNamespaces": false
}'
```

h5. Example response

```[json]
{
  "id": "rA0lav",
  "name": "control-api-test-1",
  "status": "enabled",
  "tlsOnly": true,
  "enablePusherCompatibility": false,
  "fcmKey": null,
  "apnsCertificate": null,
  "apnsUseSandboxEndpoint": false
}
```

h2(#keys). Key routes

Routes providing functionality to list, create, delete and update API keys within an account.

h3(#list-keys). List the keys in an account

h6. GET https://control.ably.net/v1/accounts/@accountId@/keys

Lists the applications for the specified @accountId@.

h5. Parameters

- account_id := required string path

h5. Example request

bc[sh]. curl "https://control.ably.net/v1/accounts/<YOUR_ACCOUNT_ID>/keys" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json'


h5. Example response

Example response:

```[json]
[
 data for keys
]
```
