---
title: Protocol Adapters
meta_description: "Clients can use the Ably network using SSE and MQTT protocol adapters. This is especially useful where an Ably Client Library SDK is not available for your language of choice, or where platform resource constraints prohibit use of a Client Library SDK."
meta_keywords: "SSE, MQTT, IoT, thin client, protocol adapter, lightweight clients, Arduino, Raspberry Pi, wearable"
section: protocol-adapters
index: 0
jump_to:
  Help with:
    - MQTT#mqtt
    - SSE#sse
---

While the recommended method for connecting to Ably is through the use of the Ably Client Library SDKs, there are certain situations where this is not possible, due to lack of platform support, or platform resource constraints. In this case, certain clients may be supported through the use of Ably protocol adapters. 

Ably Client Library SDKs are the recommended method for connecting to Ably, because they offer support for a comprehensive set of Ably features, such as automatic connection management, authentication token renewal via @authUrl@, and presence, whereas the protocol adapters may not support these features: for example MQTT protocol adapter does not have support for presence, and the SSE protocol adapter does not have support for automatic token renewal (this has to be handled manually in the client code). A full list of Ably Client Library SDKs can be found on the "SDK page":https://ably.com/download, and features supported by each SDK can be found in the "features matrix":https://ably.com/download/sdk-feature-support-matrix.

The advantage of protocol adapters, however, is that they require fewer resources in terms of memory, and network overhead, so can work in smaller footprint devices, or on a platform where an Ably Client Library SDK is not available, such as on a Arduino-based IoT wearable. In this latter case, for example, MQTT clients are readily available for Arduino-based devices, and these can be used to connect to Ably, via the Ably MQTT protocol adapter.

There are two protocol adapters covered in this section of the documentation:

1. MQTT
2. SSE

Each of these will be described briefly in the following sections.

h2(#mqtt). MQTT

"MQTT":https://mqtt.org/ is an OASIS standard messaging protocol for the Internet of Things (IoT). It is designed as an extremely lightweight publish/subscribe messaging transport that is ideal for connecting remote devices with a small code footprint and minimal network bandwidth.

The Ably MQTT protocol adapter provides an interface between an MQTT client and Ably. Being a protocol designed for small systems and IoT devices, MQTT has a low overhead in terms of system resource requirements. MQTT libraries are widely available, and support a range of languages such as C/C++, Python, and Rust.

MQTT clients can subscribe and publish to Ably channels. Any client that supports MQTT can therefore leverage Ably's realtime network, with some constraints. 

For more information on Ably's MQTT protocol adapter see the "MQTT documentation":/mqtt.

h2(#sse). SSE

Server-Sent Events (SSE) is a functionality built into more recent versions of browsers. Because "SSE support":https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events is built-in, it does not require the loading of any additional libraries, such as is the case if you were to use the Ably JavaScript Client Library SDK. You will have to handle certain operations in your client, for example, token renewal will need to be managed by your client code.

The Ably SSE protocol adapter allows the browser to subscribe to a realtime stream of events from an Ably channel. Publishing to a channel is not supported by SSE.

In addition to the SSE endpoint, Ably also provides a raw HTTP streaming endpoint. 

For more information on Ably's SSE protocol adapter see the "SSE documentation":/sse.
