---
title: Types
section: rest
index: 500
jump_to:
  REST Data types:
    - AblyException#ably-exception
    - Error Info
    - Message
    - Presence Message
    - Presence action
    - Paginated Result
    - Param
    - Token Details
    - Token Request
    - Stats
  REST Other Types:
    - Auth Options
    - Client Options
    - Channel Options
    - Cipher Params
    - Token Params
    - Stats Granularity
---

The Ably REST client library defines both data types and option types.  Data types are used to represent object such as messages; Option types are used in method arguments.

h2. REST Data types

h3(#ably-exception).
  java:  io.ably.lib.types.AblyException
  ruby:  Ably::Exceptions::BaseAblyException

blang[java].
  <%= partial 'types/_ably_exception', indent: 2, skip_first_indent: true %>

blang[ruby].
  <%= partial 'types/_base_ably_exception', indent: 2, skip_first_indent: true %>

h3(#error-info).
  default: ErrorInfo
  objc,swift: ARTErrorInfo
  java:    io.ably.lib.types.ErrorInfo
  ruby:    Ably::Models::ErrorInfo

<%= partial 'types/_error_info' %>

h3(#message).
  default: Message
  objc,swift: ARTMessage
  java:    io.ably.lib.types.Message
  ruby:    Ably::Models::Message

<%= partial 'types/_message' %>

h3(#presence-action).
  default: Presence action
  objc,swift: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION

<%= partial 'types/_presence_action' %>

h3(#presence-message).
  default: PresenceMessage
  objc,swift: ARTPresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  ruby:    Ably::Models::PresenceMessage

<%= partial 'types/_presence_message' %>

h3(#paginated-result).
  default: PaginatedResult
  objc,swift: ARTPaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  ruby:    Ably::Models::PaginatedResult

<%= partial 'types/_paginated_result' %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial 'types/_param', indent: 2, skip_first_indent: true %>

h3(#token-details).
  default: TokenDetails
  objc,swift: ARTTokenDetails
  java:    io.ably.lib.types.TokenDetails
  ruby:    Ably::Models::TokenDetails

<%= partial 'types/_token_details' %>

h3(#token-request).
  default: TokenRequest
  objc,swift: ARTTokenRequest
  java:    io.ably.lib.types.TokenRequest
  ruby:    Ably::Models::TokenRequest

<%= partial 'types/_token_request' %>

h3(#stats).
  default: Stats object
  objc,swift: ARTStats
  java:    io.ably.lib.types.Stats
  ruby:    Ably::Models::Stats

<%= partial 'types/_stats' %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity

<%= partial 'types/_stats_granularity' %>

h2. REST Other types

h3(#auth-options).
  default:   AuthOptions Object
  objc,swift: ARTAuthOptions
  ruby:      AuthOptions Hash
  java:      io.ably.lib.rest.Auth.AuthOptions

<%= partial 'types/_auth_options' %>

h3(#client-options).
  default:   ClientOptions Object
  objc,swift: ARTClientOptions
  ruby:      ClientOptions Hash
  java:      io.ably.lib.types.ClientOptions

<%= partial 'types/_client_options' %>
<%= partial 'types/_rest_client_options' %>

h3(#channel-options).
  default:   ChannelOptions Object
  objc,swift: ARTChannelOptions
  ruby:      ChannelOptions Hash
  java:      io.ably.lib.types.ClientOptions

<%= partial 'types/_channel_options' %>

h3(#cipher-params).
  default: CipherParams
  objc,swift: ARTCipherParams
  ruby:    CipherParams Hash
  java:    io.ably.lib.util.Crypto.CipherParams

<%= partial 'types/_cipher_params' %>

h3(#token-params).
  default:   TokenParams Object
  objc,swift: ARTTokenParams
  ruby:      TokenParams Hash
  java:      io.ably.lib.rest.Auth.TokenParams

<%= partial 'types/_token_params' %>
