blang[jsall].
  @TokenParams@ is a plain Javascript object and is used in the parameters of "token authentication":/realtime/authentication requests, corresponding to the desired attributes of the token. The following attributes can be defined on the object:

blang[ruby].
  @TokenParams@ is a Hash object and is used in the parameters of "token authentication":/realtime/authentication requests, corresponding to the desired attributes of the token. The following key symbol values can be added to the Hash:

blang[php].
  @TokenParams@ is an Associative Array and is used in the parameters of "token authentication":/realtime/authentication requests, corresponding to the desired attributes of the token. The following named keys and values can be added to the Associative Array:

blang[java].
  @TokenParams@ is used in the parameters of "token authentication":/realtime/authentication requests, corresponding to the desired attributes of the token.

blang[objc,swift].
  @ARTTokenParams@ is used in the parameters of "token authentication":/realtime/authentication requests, corresponding to the desired attributes of the token.

h4.
  default: Properties
  java:    Members
  ruby:    Attributes

- <span lang="default">@capability@</span><span lang="ruby">@:capability@</span> := JSON stringified capability of the token. If the token request is successful, the capability of the returned token will be the intersection of this capability with the capability of the issuing key.__Type: <span lang="default">Function</span><span lang="java">@TokenCallback@</span><span lang="ruby">Proc / Lamda</span>__

- <span lang="default">@clientId@</span><span lang="ruby">@:client_id@</span> := A client ID, used for identifying this client when publishing messages or for presence purposes. The <span lang="default">@clientId@</span><span lang="ruby">@client_id@</span> can be any non-empty string. This option is primarily intended to be used in situations where the library is instanced with a key; note that a <span lang="default">@clientId@</span><span lang="ruby">@client_id@</span> may also be implicit in a token used to instance the library; an error will be raised if a <span lang="default">@clientId@</span><span lang="ruby">@client_id@</span> specified here conflicts with the <span lang="default">@clientId@</span><span lang="ruby">@client_id@</span> implicit in the token. "Find out more about client identities":/how-ably-works#client-identity<br>__Type: String__

- <span lang="default">@nonce@</span><span lang="ruby">@:nonce@</span> := An optional opaque nonce string of at least 16 characters to ensure uniqueness of this request. Any subsequent request using the same nonce will be rejected.<br>__Type: String__

- <span lang="default">@timestamp@</span><span lang="ruby">@:timestamp@</span> := <span lang="default">The timestamp (in milliseconds since the epoch)</span><span lang="ruby,objc,swift">The timestamp</span> of this request. @timestamp@, in conjunction with the @nonce@, is used to prevent token requests from being replayed.<br>__Type: <span lang="default">Integer</span><span lang="java">Long Integer</span><span lang="ruby">Time</span><span lang="objc,swift">NSDate</span>__

- <span lang="default">@ttl@</span><span lang="ruby">@:ttl@</span> := _1 hour_ Requested time to live for the token being created <span lang="default">in milliseconds</span><span lang="objc,swift">as a @NSTimeInterval@</span>. When omitted, the Ably REST API default of 60 minutes is applied by Ably<br>__Type: <span class="default">long (milliseconds)</span><span class="ruby">Integer (seconds)</span><span class="objc,swift">NSTimeInterval</span>__
