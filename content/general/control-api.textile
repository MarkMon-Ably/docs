---
title: Control API
meta_description: "Control API provides a REST API to allow you to manage your Ably account."
meta_keywords: "Ably, account management, control, REST API."
section: general
index: 1
jump_to:
  Help with:
    - Overview#overview
    - Authentication#authentication
    - Account and application IDs#ids
    - Examples - Apps#examples-apps
    - Examples - Queues#examples-queues
    - See also#see-also
---

h2(#overview). Overview

The Control API is a REST API that allows you to manage your Ably account remotely.

Using this API you can manage:

* Your applications
* Keys for an application
* Namespaces
* Queues
* Rules

Repetitive operations such as creating or updating apps, enumerating queues, and other tasks can be automated using the Control API.

h2(#authentication). Authentication

In the Ably dashboard, on the top menu bar, navigate to "Free account" (other account name as appropriate) and select "My Access Tokens" from the menu.  

You are presented with the "My Access Tokens" area, where you can create tokens for use with the Control API. 

h3(#create-access-token). Create an access token

To create a new token use the following procedure:

1. Click the "Create new access token" button. 
2. Enter a friendly name for your token, so you'll remember what it's used for.
3. Select the capabilities you wish the token to have, depending on your use case.
4. Click the "Create" button to create the token.

h3(#using-access-token). Using the access token

From the "My access tokens" area you can click the "Copy Token" button, to copy the button to the clipboard.

You use the access token to validate your API requests. This is done by using the access token as a bearer token in the @Authorization@ of the HTTP request. For example, using Curl:

```[sh]
curl -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' ...
```

h2(#ids). Account and application IDs

Note that some requests require your Account ID, and some require your App ID.

h3(#account-id). How to find your Account ID

In the Ably dashboard, on the top menu bar, navigate to "Free account" (other account name as appropriate) and select "Account settings". Your Account is displayed.

h3(#app-id). How to find your Application ID

In the Ably dashboard click on the app you want to find the application ID for. Click on the "Settings" tab. The App ID is displayed under "Application settings".

h2(#examples-apps). Examples - applications

You can use the Control API to carry out tasks such as listing and creating applications. Operations available include:

* Get a list of apps
* Create an app
* Update an app
* Delete an app
* Update an app's APNS info 

h3(#examples-apps-list). List your apps

To list all the apps associated with an account:

```[sh]
curl "https://control.ably.net/v1/accounts/<YOUR_ACCOUNT_ID>/apps" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json'
```

An example response is shown in the following snippet:

```[json]
[
  {
    "id": "28AB6w",
    "name": "Default",
    "status": "enabled",
    "tlsOnly": true,
    "enablePusherCompatibility": false,
    "fcmKey": null,
    "apnsCertificate": null,
    "apnsUseSandboxEndpoint": false
  },
  {
    "id": "dcABrA",
    "name": "TestApp",
    "status": "deleted",
    "tlsOnly": true,
    "enablePusherCompatibility": false,
    "fcmKey": null,
    "apnsCertificate": null,
    "apnsUseSandboxEndpoint": false
  }
]
```

h3(#examples-apps-create). Create an app

To create an app:

```[sh]
curl -X "POST" "https://control.ably.net/v1/accounts/<YOUR_ACCOUNT_ID>/apps" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "status": "enabled",
  "tlsOnly": true,
  "enablePusherCompatibility": false,
  "name": "control-api-test-1",
  "setupPusherNamespaces": false
}'
```

An example response is shown in the following snippet:

```[json]
{
  "id": "rA0lav",
  "name": "control-api-test-1",
  "status": "enabled",
  "tlsOnly": true,
  "enablePusherCompatibility": false,
  "fcmKey": null,
  "apnsCertificate": null,
  "apnsUseSandboxEndpoint": false
}
```

h2(#examples-queues). Examples - queues

You can use the Control API to manage Reactor queues. The main operations are:

* List queues
* Create a queue
* Delete a queue

h3(#examples-queues-list). List queues

To list all queues associated with an app:

```[sh]
curl "https://control.ably.net/v1/apps/<YOUR_APP_ID>/queues" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json'
```

An example response is shown in the following snippet:

```[json]
[
  {
    "endpoint_friendly_name": "US East (Virginia)",
    "endpoint_server": "us-east-1-a-queue.ably.io:15671",
    "endpoint_host": "us-east-1-a-queue.ably.io",
    "region": "us-east-1-a",
    "name": "rN0lab:deadletter",
    "vhost": "shared",
    "state": "Running",
    "messages_ready": 0,
    "messages_unacknowledged": 0,
    "messages": 0,
    "ttl": 60,
    "maxLength": 10000,
    "app_name": "control-api-test-1",
    "app_api_id": "rN0lab",
    "friendly_name": "control-api-test-1 (rN0lab) - deadletter",
    "deadletter": true
  },
  {
    "endpoint_friendly_name": "US East (Virginia)",
    "endpoint_server": "us-east-1-a-queue.ably.io:15671",
    "endpoint_host": "us-east-1-a-queue.ably.io",
    "region": "us-east-1-a",
    "name": "rN0lab:queue-2",
    "vhost": "shared",
    "state": "Running",
    "messages_ready": 0,
    "messages_unacknowledged": 0,
    "messages": 0,
    "ttl": 10,
    "maxLength": 1000,
    "app_name": "control-api-test-1",
    "app_api_id": "rN0lab",
    "friendly_name": "control-api-test-1 (rN0lab) - queue-2",
    "deadletter": false
  }
]
```

h3(#examples-queues-create). Create a queue

To create a Reactor queue for an app:

```[sh]
curl -X "POST" "https://control.ably.net/v1/apps/<YOUR_APP_ID>/queues" \
     -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
     -H 'Accept: application/json' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "ttl": 10,
  "region": "us-east-1-a",
  "name": "queue-2",
  "maxLength": 1000
}'
```

In this request:

- ttl := is the time to live of messages in the queue, in minutes. 
- region := is the region in which the queue is hosted and is one of: @eu-west-1-a@, @us-east-1-a@.
- maxLength := is the maximum number of messages in the queue.
- name := is the name of the queue.

An example response is shown in the following snippet:

```[json]
{
  "endpoint_friendly_name": "US East (Virginia)",
  "endpoint_server": "us-east-1-a-queue.ably.io:15671",
  "region": "us-east-1-a",
  "name": "rN0lab:queue-2",
  "vhost": "shared",
  "state": "Running",
  "messages_ready": 0,
  "messages_unacknowledged": 0,
  "messages": 0,
  "ttl": 10,
  "maxLength": 1000
}
```

h2(#see-also). See also

* "Control API Reference":https://www.ably.io/api-docs/index.html
