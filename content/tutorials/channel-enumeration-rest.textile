---
title: Channel Enumeration using the REST API
excerpt: Learn how to enumerate through live channels and see their metadata
section: tutorials
category:
    - channels
group: sdk
index: 14
platform: browser
authors:
- author_name: Srushtika Neelakantam
  author_bio: ""
  author_profile_url: "https://github.com/Srushtika"
  author_image: "https://avatars3.githubusercontent.com/u/5900152?s=460&v=4"
- author_name: Simon Woolf
  author_bio: ""
  author_profile_url: "https://github.com/SimonWoolf"
  author_image: "https://avatars1.githubusercontent.com/u/5908687?s=460&v=4"
languages:
  - javascript
level: easy
reading_time: 5
tags:
    - Channel metadata
---

"Ably's global platform":https://ably.com/platform organizes all message traffic within an application into named "channels":/core-features/channels. Clients attach to the channels they are interested in. They can then publish messages to those channels or subscribe to receive messages from them.

Often, its useful for developers to be able to access channel metadata. Ably provides two APIs for this:

* The "Channel Metadata API":/realtime/channel-metadata enables you to subscribe to "channel lifecycle events":/realtime/channel-metadata#lifecycle-events or to "channel occupancy events":/realtime/channel-metadata#occupancy-realtime.

* The "Channel Status API":/rest/channel-status enables you to query the status of a specific channel or perform "channel enumeration":/rest/channel-metadata/enumeration-rest: that is, to list __all__ active channels within an application that are associated with a particular API key and optionally retrieve the status of each channel at the same time.

In this tutorial, you will learn how to implement channel enumeration.

Channel enumeration is part of the Channel Status API, and is currently only available via our "REST API":/rest-api. We provide a "REST client library":/rest to make it straightforward to access the REST API and you will be using the client library in this tutorial.

<%= partial partial_version('tutorials/_step-1-setup-free-account') %>

h2(#permissions). Step 2 - Configuring the required capabilities on your API key

To be able to enumerate channels, your API key must have the @Channel Metadata@ capability. "Capabilities":/core-features/authentication/#capabilities-explained specify which operations your API key is allowed to perform. For example: @Publish@ and @Subscribe@ or @Publish@ only. You configure these capabilities in the account dashboard:

# Navigate to the API Keys tab within your chosen application.
# Click the Settings button
# Ensure that Channel Metadata is selected in the list of capabilities
# Ensure that Resource restrictions (channels & queues) is set to None
# Click the Save button

<a href="/images/tutorials/metadata/channel-metadata-capabilities.png" target="_blank">
  <img src="/images/tutorials/metadata/channel-metadata-capabilities.png" style="width: 100%" alt="Channel metadata capabilities">
</a>

For simplicity, this tutorial will use "basic authentication":/core-features/authentication#basic-authentication. In production, "Ably advises that you use token authentication":http://localhost:4000/tutorials/channel-enumeration-rest/ in client-side applications to "protect your API key":/root/best-practice-guide#using-api-key-client-side.

To enumerate channels in an application that uses token authentication, your token capabilities must include @channel-metadata@ for all channels and queues by using the @'*'@ wildcard. For example, the following token capabilities permit channel enumeration and subscribe operations on all channels:

```[json]
  {
    "*": ["channel-metadata", "subscribe"]
  }
```

h2(#front-end). Step 3 - Creating a basic HTML page to display the results

Since we'll be using JavaScript in this tutorial, the best way to display the results is in a browser. So, go ahead and paste the following simple HTML in a file and name it @index.html@

```[html]
<html>
<head>
    <title>Channel Enumeration</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script lang="text/javascript" src="https://cdn.ably.io/lib/ably-1.js"></script>
</head>

<body style="padding: 60px; font-family:Arial, Helvetica, sans-serif">
    Ably Channel Enumeration using REST API - Demo
    <br/>
    <div>
        <button id='enumerate' onclick="enumerateChannels()">Enumerate channels</button>
        <br>
        <textarea id="result" rows="30" style="width: 30%; margin-top: 14px; font-family: courier, courier new; background-color: #333; color: orange;  overflow-y: scroll;" disabled autocomplete="off">
        </textarea>
    </div>
    <script src="main.js"></script>
</body>

</html>
```


The key thing to note in the HTML above is the inclusion of two JS files, one is the Ably Library, referenced via the CDN, while the other is the @main.js@ file which will include our logic. We'll work on this next.


h2(#performing-the-rest-request). Step 4 - Using Ably's REST library to perform a REST API request

Channel enumeration is not currently integrated into our REST client libraries as a dedicated method. However, you can still use our "REST client libraries":/rest to query it, using the "request() method":https://ably.com/documentation/rest/usage#request , which can perform arbitrary REST requests to our API. We highly recommend you do this rather than querying the REST api directly yourself; see "Should I use the REST API directly?":https://ably.freshdesk.com/support/solutions/articles/3000061848-should-i-use-the-rest-api-directly- for why.

For the simplicity of this tutorial, we'll use "Basic authentication":/core-features/authentication#basic-authentication to perform the request. However, it is highly recommended to use "Token auth":/core-features/authentication#token-authentication on client-side applications for "better security and protection of your API key":/root/best-practice-guide#using-api-key-client-side.

In order to receive channel enumeration information, we'll have to make use of the @/channels@ endpoint of "Ably's REST API":rest-api. We'll perform a @GET@ request using the REST library, and the result of this request will be an "HTTPPaginatedResponse":https://ably.com/documentation/rest/usage#http-paginated-response object. This allows the results to be returned in a paginated fashion, i.e, it returns a page of results and allows you to automatically request for more pages until all of the available results are returned.

Let's begin with instantiating the Ably REST library using the API key. Create a new file called @main.js@ and add the following to it.

```[javascript]
const ably = new Ably.Rest('<YOUR-API-KEY>');
```

Next, let's go ahead and perform the actual REST request using the @request()@ method as follows:

```[javascript]
const resultArea = document.getElementById('result');

//request a list of channels on button click
function enumerateChannels() {
  const endpoint = '/channels';
  ably.request('get', endpoint, { limit: 100, by: 'id' }, null, null, handleResultPage);
}

let channelCount = 0;
function handleResultPage(err, resultPage) {
  if(err || !resultPage.success) {
    resultArea.value += 'An error occurred; err = ' + (err || resultPage.errorMessage);
    return;
  }
  if(channelCount === 0) {
    if(resultPage.items.length == 0){
      resultArea.value += "Your app does not have any active channels\n";
      return;
    }
    resultArea.value += "Your app has the following active channels:\n";
  }

  resultPage.items.forEach(function(channel) {
    resultArea.value += (++channelCount) + ". " + channel + "\n";
  })

  if(resultPage.hasNext()) {
    resultPage.next(handleResultPage);
  };
}
```

Remember to replace <YOUR-API-KEY> with an actual Ably API key.

In the code above, we have set the REST endpoint to be @/channels@. The @enumerateChannels()@ function is invoked on a button click from the front end. Inside this function, we have made a simple request to Ably's REST API, using Ably's JavaScript REST client library. We can optionally specify a limit to the results returned; you can have a look at the "API reference":/general/channel-lifecycle.textile in the docs to learn more. As mentioned before, the results are returned in the form of an @HTTPPaginatedResponse@; hence we are required to process them page by page. Each page contains one @Channel@ per active channel that exists within an app. Here, all we are interested in is the name of the channel, so we used @by: 'id'@ parameter to request only a list of names. If you want more detailed information about each channel (such as occupancy data), you can remove this parameter. See "our REST API docs":/rest-api#enumeration-rest for documentation on all supported parameters.

h2(#live-demo). Step - 5 Live Demo

Ably Channel Enumeration using REST API - Demo
Make sure that you've enabled the channel metadata permission on your API key.

<div>
  <input type="text" style="width: 30%" id="user-api-key" placeholder="Paste your Ably API key">
  <br/>
  <button id='enumerate' onclick="enumerateChannels()">Enumerate channels</button>
  <br/>
  <textarea id="result" rows="30" style="width: 100%; margin-top: 14px; font-family: courier, courier new; background-color: #333; color: orange;  overflow-y: scroll;" autocomplete="off" disabled>
  </textarea>
</div>

"See the full code in GitHub":https://github.com/ably/tutorials/tree/channel-enumeration-rest

h2(#next-steps). Next Steps

1. If you would like to find out more about how channels and publishing or subscribing to messages work, see the realtime "channels":https://ably.com/documentation/realtime/channels & "messages":https://ably.com/documentation/realtime/messages documentation.
2. If you would like to check out the other related tutorials to work with channel metadata, see the "Channel Lifecycle Events":/tutorials/channel-lifecycle-events and "Channel Occupancy Events":/tutorials/channel-occupancy-events tutorials.
3. Learn more about "Ably features":https://ably.com/features by going through our other "Ably tutorials":https://ably.com/tutorials
4. Gain a good technical "overview of how the Ably realtime platform works":https://ably.com/documentation/how-ably-works
5. "Get in touch if you need help":https://ably.com/contact



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script lang="text/javascript" src="https://cdn.ably.io/lib/ably-1.js"></script>

<script type="text/javascript">
  

  const resultArea = document.getElementById('result');
  //request a list of channels on button click
  function enumerateChannels() {
    const endpoint = '/channels';
    const userApiKey = document.getElementById('user-api-key').value;
    const ably = new Ably.Rest(userApiKey);
    ably.request('get', endpoint, { limit: 100, by: 'id' }, null, null, handleResultPage);
  }

  let channelCount = 0;
  function handleResultPage(err, resultPage) {
    if(err || !resultPage.success) {
      resultArea.value += 'An error occurred; err = ' + (err || resultPage.errorMessage);
      return;
    }
    if(channelCount === 0) {
      if(resultPage.items.length == 0){
        resultArea.value += "Your app does not have any active channels\n";
        return;
      }
      resultArea.value += "Your app has the following active channels:\n";
    }

    resultPage.items.forEach(function(channel) {
      resultArea.value += (++channelCount) + ". " + channel + "\n";
    })

    if(resultPage.hasNext()) {
      resultPage.next(handleResultPage);
    };
  }
</script>
