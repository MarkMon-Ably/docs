---
title: DSX subscription tutorial
section: tutorials
index: 12
---

A Data Stream Exchange (DSX) platform allows businesses to publish streams of data that other businesses or applications can subscribe to, in order to receive realtime updates.

In this tutorial we will establish a DSX subscriber account and connect to a real world data stream to receive realtime updates. If you're new to Ably, we recommend you to check out our "Pub/Sub tutorials":https://www.ably.io/tutorials#tut-client-side to get a basic overview. Let's get started.

<%= partial 'tutorials/_step-1-setup-free-account' %>

h2. Step 2 - Locating the product on the Ably Hub

Most companies make their open as well as commercial streams publicly available through the "Ably Hub":/hub, which is a catalogue of data streams. For this tutorial, we'll be making use of the *London tube schedule updates* data stream containing the data provided by "Transport For London (TFL)":https://tfl.gov.uk/. As the names suggests, TFL is a local government body responsible for the transport system in Greater London, England. All transport related data can be obtained for free from their official website. Ideally, a producer of data would push/publish their data directly into Ably DSX, for others to subscribe, however, Ably pulls TFL's data from public various sources and makes it available as a realtime stream that anyone can subscribe to, for the purpose of demonstrating the functionality of DSX.

The data stream we'll be using is listed as "London tube schedule updates":https://www.ably.io/hub/products/10 on the "Ably Hub":https://www.ably.io/hub/.

<a href="/images/tutorials/tfl-tubes-screenshot.png" target="_blank">
    <img src="/images/tutorials/tfl-tubes-screenshot.png" style="width: 100%" alt="London tube schedule updates product on Ably Hub">
</a>

The full documentation for this product can be found on the "TFL DSX Source":https://dsx-sources.herokuapp.com/source/tfl page.

Some products require the owner to confirm access, and others may charge for usage of their product. For this product however, assuming that DSX is enabled on your account, your application should be automatically accepted, and you should now be able to use the product straight away.

h2. Step 3 - Determining the channel names

In DSX, the channels available in any product are be determined by following the name convention described below:

[product:<strong>DSX-ID</strong>]:<strong>NAMESPACE</strong>:<strong>OPTIONAL-CATEGORY</strong>

For the current product, we have three categories of channels, each containing different set of data, to choose from:

1. Arrivals at a station, with namespace @tube:{{line}}:{{station}}:arrivals@
2. Disruptions on a line, with namespace @tube:{{line}}:disruptions@
3. Disruptions on all lines, with namespace @tube:disruptins@

h2. Next steps

1. If you would like to find out more about how channels, publishing and subscribing works, see the Realtime "channels":/realtime/channels & "messages":/realtime/messages documentation
2. Learn more about "Ably DSX":/dsx
3. Gain a good technical "overview of how the Ably realtime platform works":https://www.ably.io/documentation/how-ably-works
4. "Get in touch if you need help":https://www.ably.io/contact
