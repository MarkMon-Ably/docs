---
title: A real world guide to Realtime WebRTC concepts with Ably
section: tutorials
index: 104
---


h2. Introduction

"WebRTC":https://webrtc.org is a free, open project that provides browsers and mobile applications with Real-Time Communications (RTC) capabilities via simple APIs. The WebRTC components have been optimized to best serve this purpose. While WebRTC knows how to communicate with other peers, it doesn't know how to *discover these other peers*. Discovery is an inherent problem, this is where we'll utilise the "Ably Realtime Platform":https://www.ably.io/.

 
"Ably":https://www.ably.io/ is a realtime data delivery platform providing developers everything they need to create, deliver and manage complex projects. The realtime features provided byAbly Realtime Platform, make it possible for WebRTC to discover the exact peer we want it to discover.

h2. WebRTC support in current browsers

WebRTC is currently supported by Google Chrome, Mozilla Firefox, and Opera, in both their Desktop and Android versions. Microsoft’s Internet Explorer and Apple’s Safari are yet to add support for WebRTC.

h2. Frequent Terminologies

There are a lot of regular words and terminologies that are part of the WebRTC world. It would be nice if we get to know them now, so we are more familiar with them before we move further in the tutorial..



# WebRTC: Web Real Time Communications - the umbrella term for this technology and name of the World Wide Web Consortium's (W3C) working group to standardize the technology in that body
#  RTCPeerConnection: a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.
#  RTCDataChannel: Represents a bi-directional data channel between two peers of a connection
#  MediaStream: represents a stream of media content. A stream consists of several **tracks** **such as video or audio tracks.
# RTCIceCandidate: represents a candidate Internet Connectivity Establishment (ICE) server which may establish an RTCPeerConnection
# RTCSessionDescription: describes one end of a connection or potential connection. Each RTCSessionDescription comprises a description type indicating which part of the offer/answer negotiation process it describes and of the Session Description Protocol (SDP) of the session.


These few terms defined above should be just enough to There are a lot of regular words and terminologies that are part of the WebRTC world. Should you want to go through a glossary of other terms used in WebRTC, you can visit the docs "here":https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API 

h2. Prerequisites

Basic understanding of JavaScript would be needed to follow through with this tutorial
Valid credentials for Ably would also be needed to go through with this tutorial.


h2. Lessons in this series

# "Data channels the right way using Ably":/tutorials/Data-channels-the-right-way-using-Ably/
# "Straightforward Video calls with WebRTC and Ably":/tutorials/Straightforward-Video-calls-with-WebRTC-and-Ably/
# "WebRTC file transfers with Ably":/tutorials/WebRTC-file-transfers-with-Ably/
# "Less code, more efficient screen sharing with Ably":/tutorials/Less-code-more-efficient-screen-sharing-with-Ably/
